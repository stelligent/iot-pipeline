AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SrcCodeBucket:
    Description: Enter the S3 bucket storing the source code
    Type: String
  FunctionName:
    Description: Lambda Function Name
    Type: String
    Default: iot-simulator
Resources:
  AWSRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'iot:connect'
              - 'iot:publish'
              - 'iot:subscribe'
              - 'iot:createTopicRule'
              - 'iot:getTopicRule'
              - 'iot:DescribeEndpoint'
            Resource: '*'
            Effect: Allow
          - Action:
              - 's3:getObject'
            Resource:
              - !Sub 'arn:aws:s3:::${SrcCodeBucket}-${AWS::Region}-${AWS::AccountId}/*'
            Effect: Allow
          - Action:
              - 'iam:createPolicy'
              - 'iam:createRole'
              - 'iam:getRole'
              - 'iam:attachRolePolicy'
              - 'iam:PassRole'
            Effect: Allow
            Resource: '*'
  AWSLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref AWSRolePolicy
  AWSLambda:
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          BUCKET_NAME: !Sub ${SrcCodeBucket}-${AWS::Region}-${AWS::AccountId}
          OBJECT_KEY: lambda/data.csv
          RULE_NAME: !ImportValue IOTRuleName
      FunctionName: !Ref FunctionName
      Code:
        S3Bucket: !Sub ${SrcCodeBucket}-${AWS::Region}-${AWS::AccountId}
        S3Key: lambda/src.zip
      Handler: src/index.handler
      Role: !GetAtt AWSLambdaRole.Arn
      Runtime: nodejs8.10
      Timeout: 60

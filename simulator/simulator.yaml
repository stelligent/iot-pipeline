AWSTemplateFormatVersion: 2010-09-09
Parameters:
  S3BucketName:
    Description: Enter S3 bucket name you are about to create
    Type: String
  SrcCodeBucket:
    Description: Enter the S3 bucket storing the source code
    Type: String
    Default: iot-us-west-2-simulator-publicbucket
  RuleName:
    Description: Enter topic rule name
    Type: String
    Default: simulator_rule
  FunctionName:
    Description: Lambda Function Name
    Type: String
    Default: iot-simulator
Resources:
  AWSRolePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'iot:connect'
              - 'iot:publish'
              - 'iot:subscribe'
              - 'iot:createTopicRule'
              - 'iot:getTopicRule'
              - 'iot:DescribeEndpoint'
            Resource: '*'
            Effect: Allow
          - Action:
              - 's3:getObject'
            Resource:
              - 'arn:aws:s3:::iot-simulator-publicbucket/*'
              - !Sub 'arn:aws:s3:::${SrcCodeBucket}/*'
              - 'arn:aws:s3:::awsiot.simulator.publicbucket/*'
              - !Sub arn:aws:s3:::${S3BucketName}/*
            Effect: Allow
          - Action:
              - 'iam:createPolicy'
              - 'iam:createRole'
              - 'iam:getRole'
              - 'iam:attachRolePolicy'
              - 'iam:PassRole'
            Effect: Allow
            Resource: '*'
  AWSLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref AWSRolePolicy
  AWSLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Ref FunctionName
      Code:
        S3Bucket: !Ref SrcCodeBucket
        S3Key: index.zip
      Handler: index.handler
      Role: !GetAtt AWSLambdaRole.Arn
      Runtime: nodejs4.3
      Timeout: 60
  MyS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref S3BucketName
  ElasticsearchDomain:
    Type: 'AWS::Elasticsearch::Domain'
    DeletionPolicy: Retain
    Properties:
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: false
        InstanceCount: 1
        ZoneAwarenessEnabled: false
        InstanceType: m3.medium.elasticsearch
      EBSOptions:
        EBSEnabled: false
      SnapshotOptions:
        AutomatedSnapshotStartHour: 0
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: '*'
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: 'true'
  AWSESDomainActionPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'es:ESHttpPut'
            Resource:
              - 'arn:aws:es:*:*:*'
  AWSESDomainActionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: iot.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref AWSESDomainActionPolicy
  AWSIoTRule:
    Type: 'AWS::IoT::TopicRule'
    Properties:
      RuleName: !Ref RuleName
      TopicRulePayload:
        Actions:
          - Elasticsearch:
              Endpoint: !Join 
                - ''
                - - 'http://'
                  - !GetAtt ElasticsearchDomain.DomainEndpoint
              Id: '${timestamp()}'
              Index: simulator_index
              RoleArn: !GetAtt 
                - AWSESDomainActionRole
                - Arn
              Type: simulator_mapping
        AwsIotSqlVersion: beta
        Description: Iot rule for simulation
        RuleDisabled: false
        Sql: !Sub SELECT * FROM 'iot/blog/${RuleName}'
